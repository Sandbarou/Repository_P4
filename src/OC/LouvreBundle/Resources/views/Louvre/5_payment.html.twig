{% extends "OCLouvreBundle:Louvre:1_index.html.twig" %}

{% block joconde %}
{% endblock %}

{% block menu %}

    <div class="row">
        <div id="page_title" class="col s12 m12 l12 center">COMMANDER UN TICKET </div>
        <div id="page_subtitle_1" class="col s4 center">Date de visite</div>
        <div id="page_subtitle_2" class="col s4 center">Identité des visiteurs</div>
        <div id="page_subtitle_3_active" class="col s4 center">Paiement</div>
    </div>

{% endblock %}

{% block form_part %}

    <div>
        Prix : {{ total }} €<br>
        <br>
    </div>


    {{ form_start(form, {attr: {id: form.vars.id}}) }}
    <div class="form-group">
        <label for="card-element"><h6>
                Payer par carte bancaire
            </h6></label>
        <p></p>
        <div id="card-element" class="form-control"></div>
        <div id="card-errors" class="help-block" role="alert"></div>
    </div>
    <p></p>

    {{ form_widget(form.token) }}
    {{ form_end(form) }}

{% endblock %}

{% block body %}
    <div id="blank3"></div>
{% endblock %}


{% block hidden_part %}
    <div id="blank4"></div>
{% endblock %}

    {% block javascripts %}
        {{ parent() }}
        <script type="text/javascript" src="https://js.stripe.com/v3/"></script>

        <script type="text/javascript">
            var form = document.getElementById('{{ form.vars.id }}');
            var errors = document.getElementById('card-errors');
            var stripe = Stripe('{{ stripe_public_key }}');
            var elements = stripe.elements();
            var card = elements.create('card');
            card.mount('#card-element');
            card.addEventListener('change', function(event) {
                if (event.error) {
                    errors.textContent = event.error.message;
                    form.classList.add('has-error');
                } else {
                    errors.textContent = '';
                    form.classList.remove('has-error');
                }
            });
            form.addEventListener('submit', function(event) {
                event.preventDefault();
                stripe.createToken(card).then(function(result) {
                    if (result.error) {
                        errors.textContent = result.error.message;
                        form.classList.add('has-error');
                    } else {
                        document.getElementById('{{ form.children.token.vars.id }}').setAttribute('value', result.token.id);
                        form.submit();
                    }
                });
            });
        </script>
    {% endblock %}

{#
    <form action="/charge" method="post" id="payment-form">
        <div class="form-row">
            <label for="card-element">
                Credit or debit card
            </label>
            <div id="card-element">
                <!-- a Stripe Element will be inserted here. -->
            </div>

            <!-- Used to display form errors -->
            <div id="card-errors" role="alert"></div>
        </div>

        <input type="submit" class="submit" value="Submit Payment">
    </form>




<script type="text/javascript" src="https://js.stripe.com/v3/"></script>

<script>
    // Create a Stripe client
    var stripe = Stripe('pk_test_z0fCRzed0j8vWuCM3JHuYbPz');

    // Create an instance of Elements
    var elements = stripe.elements();

    // Custom styling can be passed to options when creating an Element.
    var style = {
        base: {
            // Add your base input styles here. For example:
            fontSize: '16px',
            color: "#32325d",
        }
    };

    // Create an instance of the card Element
    var card = elements.create('card', {
        'style': {
            'base': {
                'fontFamily': 'Arial, sans-serif',
                'fontSize': '16px',
                'color': '#000',
            },
            'invalid': {
                'color': 'red',
            },
        }
    });

    // Add an instance of the card Element into the `card-element` <div>
    card.mount('#card-element');

    // Handle real-time validation errors from the card Element.
    card.addEventListener('change', function(event) {
        var displayError = document.getElementById('card-errors');
        if (event.error) {
            displayError.textContent = event.error.message;
        } else {
            displayError.textContent = '';
        }
    });

    // Create a token or display an error when the form is submitted.
    var form = document.getElementById('payment-form');
    form.addEventListener('submit', function(event) {
        event.preventDefault();

        stripe.createToken(card).then(function(result) {
            if (result.error) {
                // Inform the customer that there was an error
                var errorElement = document.getElementById('card-errors');
                errorElement.textContent = result.error.message;
            } else {
                // Send the token to your server
                stripeTokenHandler(result.token);
            }
        });
    });

    function stripeTokenHandler(token) {
        // Insert the token ID into the form so it gets submitted to the server
        var form = document.getElementById('payment-form');
        var hiddenInput = document.createElement('input');
        hiddenInput.setAttribute('type', 'hidden');
        hiddenInput.setAttribute('name', 'stripeToken');
        hiddenInput.setAttribute('value', token.id);
        form.appendChild(hiddenInput);

        // Submit the form
        form.submit();
    }


</script>#}
